{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNsD;AACkC;AACvB;AACnB;AAE9C,MAAMO,SAAS,GAAGC,IAAA,IAAmC;EAAA,IAAlC;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAC5C,MAAM;IAAEG;EAAK,CAAC,GAAGF,UAAU;EAE3B,OACIG,iEAAA,CAACN,wDAAQ,QACLM,iEAAA,CAACV,sEAAiB,QACdU,iEAAA,CAACR,4DAAS;IAACS,KAAK,EAAC;EAAe,GAC5BD,iEAAA,CAACP,gEAAa;IACVS,KAAK,EAAC,MAAM;IACZC,KAAK,EAAEJ,IAAK;IACZK,OAAO,EAAE,CACL;MAAEF,KAAK,EAAE,gBAAgB;MAAEC,KAAK,EAAE;IAAE,CAAC,EACrC;MAAED,KAAK,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAE,CAAC,EACnC;MAAED,KAAK,EAAE,mBAAmB;MAAEC,KAAK,EAAE;IAAE,CAAC,EACxC;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC/B;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC/B;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAE,CAAC,EAC/B;MAAED,KAAK,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAE;IAC9B;IAAA,CACF;;IACFE,QAAQ,EAAGF,KAAK,IAAKL,aAAa,CAAC;MAAEC,IAAI,EAAEI;IAAM,CAAC;EAAE,CACvD,CACM,CACI,CAAC,EACpBH,iEAAA,QAAST,sEAAa,CAAC,CAAC,EACpBS,iEAAA,CAACX,gEAAW,MAAE,CACb,CACC,CAAC;AAEnB,CAAC;AAEDD,oEAAiB,CAAC,iCAAiC,EAAE;EACjDa,KAAK,EAAE,sBAAsB;EAC7BK,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,QAAQ;EAClBV,UAAU,EAAE;IACRE,IAAI,EAAE;MACFS,IAAI,EAAE,QAAQ;MACdC,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,eAAe,EAAE,wCAAwC;EACzDC,IAAI,EAAEhB,SAAS;EACfiB,IAAIA,CAAA,EAAG;IACH,OACIZ,iEAAA;MAAKa,SAAS,EAAC;IAAoB,GAC/Bb,iEAAA,CAACX,wEAAmB,MAAE,CACrB,CAAC;EAEd;AACJ,CAAC,CAAC,C","sources":["webpack://gutenpride/external window [\"wp\",\"blockEditor\"]","webpack://gutenpride/external window [\"wp\",\"blocks\"]","webpack://gutenpride/external window [\"wp\",\"components\"]","webpack://gutenpride/external window [\"wp\",\"element\"]","webpack://gutenpride/webpack/bootstrap","webpack://gutenpride/webpack/runtime/compat get default export","webpack://gutenpride/webpack/runtime/define property getters","webpack://gutenpride/webpack/runtime/hasOwnProperty shorthand","webpack://gutenpride/webpack/runtime/make namespace object","webpack://gutenpride/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { InnerBlocks, InspectorControls, useBlockProps } from '@wordpress/block-editor';\nimport { PanelBody, SelectControl } from '@wordpress/components';\nimport { Fragment } from '@wordpress/element';\n\nconst editBlock = ({ attributes, setAttributes }) => {\n    const { tier } = attributes;\n\n    return (\n        <Fragment>\n            <InspectorControls>\n                <PanelBody title=\"Tier Settings\">\n                    <SelectControl\n                        label=\"Tier\"\n                        value={tier}\n                        options={[\n                            { label: '1 Duke/Duchess', value: 1 },\n                            { label: '2 King/Queen', value: 2 },\n                            { label: '3 Emperor/Empress', value: 3 },\n                            { label: '4 Royal+', value: 4 },\n                            { label: '5 Royal+', value: 5 },\n                            { label: '6 Royal+', value: 6 },\n                            { label: '7 Royal+', value: 7 }\n                            // Add more tiers as needed\n                        ]}\n                        onChange={(value) => setAttributes({ tier: value })}\n                    />\n                </PanelBody>\n            </InspectorControls>\n            <div {...useBlockProps()}>\n                <InnerBlocks />\n            </div>\n        </Fragment>\n    );\n};\n\nregisterBlockType('my-namespace/my-container-block', {\n    title: 'Subscriberstar Block',\n    icon: 'text',\n    category: 'layout',\n    attributes: {\n        tier: {\n            type: 'number',\n            default: 1,\n        },\n    },\n    render_callback: 'render_my_container_block',\n    edit: editBlock,\n    save() {\n        return (\n            <div className=\"my-container-block\">\n                <InnerBlocks.Content />\n            </div>\n        );\n    },\n});\n"],"names":["registerBlockType","InnerBlocks","InspectorControls","useBlockProps","PanelBody","SelectControl","Fragment","editBlock","_ref","attributes","setAttributes","tier","createElement","title","label","value","options","onChange","icon","category","type","default","render_callback","edit","save","className","Content"],"sourceRoot":""}